/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* sumZero(int n, int* returnSize){
    int* ans = (int*)malloc(n*sizeof(int));
    *returnSize = n;
    int negative = -1 , positive = 1; 
    if(n&1)
    {
        for(int i = 0;i < (n/2);i++)
            ans[i] = negative--;
        ans[(n/2)] = 0;
        for(int i = ((n/2)+1);i < n;i++)
            ans[i] = positive++;
    }
    else
    {
        for(int i = 0;i < (n/2);i++)
            ans[i] = negative--;
        for(int i = (n/2);i < n;i++)
            ans[i] = positive++;
    }
    return ans;
}



--------------------------------------------------------------------------------------------------------------------------

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* sumZero(int n, int* returnSize){
    int* ans = (int*)malloc(n*sizeof(int));
    *returnSize = n;
    int negative = -1 , positive = 1, j; 
    if(n&1)
    {
        j = n-1;
        for(int i = 0;i < (n/2);i++)
        {
            if(i == j)
                break;
            ans[i] = negative--;
            ans[j--] = positive++; 
        }
        ans[(n/2)] = 0; 
    }
    else
    {
        j = n-1;
        for(int i = 0;i < (n/2);i++)
        {
            if(i == j)
                break;
            ans[i] = negative--;
            ans[j--] = positive++; 
        }
    }
    return ans;
}



--------------------------------------------------------------------------------------------------------------------------


/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* sumZero(int n, int* returnSize){
    int* ans = (int*)malloc(n*sizeof(int));
    *returnSize = n;
    int negative = -1 , positive = 1, j= n-1;
    for(int i = 0;i < (n/2);i++)
    {
        if(i == j)
            break;
        ans[i] = negative--;
        ans[j--] = positive++; 
        }
    if(n & 1)
        ans[(n/2)] = 0; 
    return ans;
}



--------------------------------------------------------------------------------------------------------------------------


/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* sumZero(int n, int* returnSize){
    int* ans = (int*)malloc(n*sizeof(int));
    *returnSize = n;
    for(int i = 0,j= n-1;i <=j;i++,j--)
    {
        ans[i] = -1 * n;
        ans[j] = n--; 
        if(i == j)
            ans[i] = 0;
    }
    return ans;
}